diff -Nru sqlite-2.8.15-beos-orig/src/func.c sqlite-2.8.15-beos/src/func.c
--- sqlite-2.8.15-beos-orig/src/func.c	2005-12-06 01:06:39.000000000 +0000
+++ sqlite-2.8.15-beos/src/func.c	2005-12-06 01:06:25.000000000 +0000
@@ -154,6 +154,46 @@
 }
 
 /*
+** Implementation of the decround() function
+*/
+static void decroundFunc(sqlite_func *context, int argc, const char **argv){
+  char zBuf[100];
+//  assert( argc==1 );
+//  if( argv[0]==0 ) return;
+  int i = 0;
+  int l = strlen(argv[0]);
+  char c;
+  int z = 0;		// zlote
+  int g = 0;		// grosze
+  int w = 0;		// wykladnik
+  int grosze = 0;
+
+  while (i<l) {
+    c = argv[0][i++];
+    if (c == '.') grosze++;
+    else
+      if (grosze == 0) z = z*10+c-'0';
+      else {
+        w++;
+        if (w<3) g = g*10+c-'0';
+	else
+	  if (w==3) {
+	    if ((c-'0')>=5) {
+	      g++;
+	      if (g>=100) { z++; g-=100; }
+	    }
+	    break;	// nie interesuja nas cyfry poza .00x
+	  }
+      }
+  }
+  // przypadek z jedną cyfrą po przecinku
+  if (w==1) g = g*10;
+
+  sprintf(zBuf,"%i.%02i",z,g);
+  sqlite_set_result_string(context, zBuf, -1);
+}
+
+/*
 ** Implementation of the upper() and lower() SQL functions.
 */
 static void upperFunc(sqlite_func *context, int argc, const char **argv){
@@ -578,6 +618,7 @@
     { "abs",        1, SQLITE_NUMERIC, 0, absFunc    },
     { "round",      1, SQLITE_NUMERIC, 0, roundFunc  },
     { "round",      2, SQLITE_NUMERIC, 0, roundFunc  },
+    { "decround",   1, SQLITE_NUMERIC, 0, decroundFunc },
     { "upper",      1, SQLITE_TEXT,    0, upperFunc  },
     { "lower",      1, SQLITE_TEXT,    0, lowerFunc  },
     { "coalesce",  -1, SQLITE_ARGS,    0, ifnullFunc },
